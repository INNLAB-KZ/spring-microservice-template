version: '3'

services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - 15672:15672
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  postgresqldb:
    container_name: postgresqldb
    image: postgres:13.3-alpine
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5437:5432
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  config:
    container_name: config
    build: ./config
    environment:
      - CONFIG_SERVICE_PASSWORD=$CONFIG_SERVICE_PASSWORD
    image: innlabkz/qundylyq-config
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  discovery:
    container_name: discovery
    build: ./discovery
    environment:
      - CONFIG_SERVICE_PASSWORD=$CONFIG_SERVICE_PASSWORD
    image: innlabkz/qundylyq-discovery
    restart: always
    depends_on:
      - config
    ports:
      - 8761:8761
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  gateway:
    container_name: gateway
    build: ./gateway
    environment:
      - CONFIG_SERVICE_PASSWORD=$CONFIG_SERVICE_PASSWORD
      - CORS_URL=$CORS_URL
    image: innlabkz/qundylyq-gateway
    restart: always
    depends_on:
      - config
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  auth-service:
    container_name: auth-service
    build: ./auth-service
    environment:
      - CONFIG_SERVICE_PASSWORD=$CONFIG_SERVICE_PASSWORD
      - USER_SERVICE_PASSWORD=$USER_SERVICE_PASSWORD
      - FILE_SERVICE_PASSWORD=$FILE_SERVICE_PASSWORD
      - SCHOOL_SERVICE_PASSWORD=$SCHOOL_SERVICE_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_SERVER=$POSTGRES_SERVER
    image: innlabkz/qundylyq-auth-service
    restart: always
    depends_on:
      - config
      - postgresqldb
    links:
      - postgresqldb
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  user-service:
    container_name: user-service
    build: ./user-service
    environment:
      - CONFIG_SERVICE_PASSWORD=$CONFIG_SERVICE_PASSWORD
      - USER_SERVICE_PASSWORD=$USER_SERVICE_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_SERVER=$POSTGRES_SERVER
    image: innlabkz/qundylyq-user-service
    restart: always
    depends_on:
      - config
      - postgresqldb
    links:
      - postgresqldb
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  file-service:
    container_name: file-service
    build: ./file-service
    volumes:
      - ./data/public/tmp:$FILE_PATH
    environment:
      - CONFIG_SERVICE_PASSWORD=$CONFIG_SERVICE_PASSWORD
      - FILE_SERVICE_PASSWORD=$FILE_SERVICE_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_SERVER=$POSTGRES_SERVER
      - FILE_PATH=$FILE_PATH
    image: innlabkz/qundylyq-file-service
    restart: always
    depends_on:
      - config
      - postgresqldb
    links:
      - postgresqldb
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  nginx:
    image: abevoelker/docker-nginx-alpine-brotli
    container_name: nginx
    volumes:
      - ./data/nginx/config/nginx_brotli.conf:/etc/nginx/nginx.conf:ro
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/public/angular:/var/www/angular
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/logs/nginx:/var/log/nginx
    links:
      - gateway
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - gateway
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    links:
      - nginx

volumes:
  innlab-data:
